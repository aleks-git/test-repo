
name: CI/CD
on:
  push:
    branches: [ main, stage ]
  pull_request:
#    types:
#      - closed
    branches: [main, stage]
  workflow_dispatch:  # Allows manual triggering

env:
  SERVER_USER:  ${{ secrets.SERVER_USER }}
  GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
  SERVER_IP:    ${{ github.ref_name == 'main' && secrets.PROD_SERVER_IP || secrets.STAGE_SERVER_IP }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer:2.6.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install PHP Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --no-scripts

#      - name: Install PHP Dependencies
#        uses: php-actions/composer@v6
#        with:
#          dev: no
#          version: '2.6.6'
#          php_version: '8.0'
#          ssh_key: ${{ secrets.SSH_KEY }}
#          ssh_key_pub: ${{ secrets.SSH_KEY_PUB }}
#          #run: composer install --prefer-dist --no-progress --no-interaction --no-scripts

      - name: Install Node & NPM Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '22.9.0'
          run: npm install

      - name: Run NPM scripts
        run: npm run gulp:build:prod

#      - name: Run PHP Tests
#        run: path/to/phpunit

  deploy:
    runs-on: ubuntu-latest
    #needs: build-and-test
    if: github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Display ENV (deploy)
        run: "echo !!-deploy"
#
#      - name: Deploy
#        env:
#          DEPLOY_KEY: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          ssh -i $DEPLOY_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
#            cd $PRODUCTION_DEPLOY_PATH &&
#            git pull origin master &&
#            composer install --no-dev --no-interaction &&
#            npm ci &&
#            npm run gulp:build:prod &&
#            php ./scripts/commands config:decrypt"
#
#      - name: Tag Production Release
#        if: success()
#        run: |
#          PROD_TAG="prod-$(date +'%Y%m%d%H%M%S')"
#          git tag $PROD_TAG
#          git push origin $PROD_TAG

#  notification:
#    name: Notify
#    runs-on: ubuntu-latest
#    needs: [deploy]
#    if: always()
#    steps:
#      - uses: martialonline/workflow-status@v3
#        id: check
#      - uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ steps.check.outputs.status }}
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}